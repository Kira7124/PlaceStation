<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.project3.placestation.repository.interfaces.ProductRepository">

	<!-- 상품 리스트 출력 -->
	<select id="findAll">
		SELECT * FROM product where prod_delete_yn = 'N';
	</select>


	<!-- 리뷰 수 많은 상품 -->
	<select id="findAllByRev"
		resultType="com.project3.placestation.product.dto.MainProductReviewDto">
		SELECT p.prod_no as prodNo,
		p.prod_writer_no prodWriterNo,
		p.prod_title as prodTitle,
		p.prod_start_time as prodStartTime ,
		p.prod_end_time as prodEndTime ,
		p.prod_space_info as prodSpaceInfo ,
		p.prod_address as prodAddress ,
		p.prod_goods_info as prodGoodsInfo ,
		p.prod_caution_info as prodCautionInfo ,
		p.prod_maximum_people as
		prodMaximumPeople ,
		p.prod_price as prodPrice ,
		p.file_path as filePath
		,
		p.prod_major_category_id as prodMajorCategoryId ,
		p.prod_subcategory_id as prodSubcategoryId
		, COUNT(r.prod_rev_no) as
		reviewCount
		FROM
		product p
		LEFT JOIN prod_review r ON p.prod_no =
		r.prod_no
		WHERE
		p.prod_delete_yn = 'N'
		GROUP BY p.prod_no
		ORDER BY
		reviewCount DESC
		LIMIT 8
	</select>

	<!-- 평점 높은 상품 -->
	<select id="findAllByStar"
		resultType="com.project3.placestation.product.dto.MainProductStarDto">
		SELECT p.prod_no as prodNo,
		p.prod_writer_no prodWriterNo,
		p.prod_title as prodTitle,
		p.prod_start_time as prodStartTime ,
		p.prod_end_time as prodEndTime ,
		p.prod_space_info as prodSpaceInfo ,
		p.prod_address as prodAddress ,
		p.prod_goods_info as prodGoodsInfo ,
		p.prod_caution_info as prodCautionInfo ,
		p.prod_maximum_people as
		prodMaximumPeople ,
		p.prod_price as prodPrice ,
		p.file_path as filePath
		,
		p.prod_major_category_id as prodMajorCategoryId ,
		p.prod_subcategory_id as prodSubcategoryId ,
		AVG(r.prod_rev_star) as
		averageRating
		FROM product p
		LEFT JOIN prod_review r ON p.prod_no =
		r.prod_no
		WHERE
		p.prod_delete_yn = 'N'
		GROUP BY p.prod_no
		ORDER BY
		averageRating DESC
		LIMIT 8
	</select>

	<!-- 상품 최신 순서 -->
	<select id="findAllByStart">
		SELECT
		prod_no as prodNo,
		prod_writer_no as
		prodWriterNo ,
		prod_title as prodTitle ,
		prod_start_time as
		prodStartTime,
		prod_end_time as prodEndTime ,
		prod_space_info as
		prodSpaceInfo ,
		prod_goods_info as prodGoodsInfo ,
		prod_caution_info as
		prodCautionInfo
		,
		prod_maximum_people as
		prodMaximumPeople ,
		prod_address
		as prodAddress
		,
		prod_detailed_address
		as prodDetailedAddress ,
		prod_price as prodPrice
		,
		file_path as filePath
		,
		prod_major_category_id
		as prodMajorCategoryId ,
		prod_subcategory_id as
		prodSubcategoryId ,
		prod_full_address as
		prodFullAddress ,
		prod_location_x as prodLocationX
		,
		prod_location_y as
		prodLocationY,
		prod_rdate as prodRdate ,
		prod_update_at as prodUpdateAt
		,
		prod_delete_reason as prodDeleteReason
		,
		prod_delete_yn as
		prodDeleteYn
		,
		addition_explanation as
		additionExplanation
		FROM product
		WHERE
		prod_delete_yn = 'N'
		ORDER
		BY
		prod_update_at DESC
		LIMIT 8
	</select>


	<insert id="saveProduct">
		insert into product (prod_writer_no , prod_title ,
		prod_start_time ,
		prod_end_time , prod_space_info ,
		prod_goods_info ,
		prod_caution_info , prod_maximum_people,prod_address ,
		prod_detailed_address,
		prod_price , file_path , prod_major_category_id
		, prod_subcategory_id ,
		prod_full_address ,
		prod_location_x ,
		prod_location_y , addition_explanation )
		values (#{prodWriterNo},
		#{prodTitle} ,
		#{prodStartTime} , #{prodEndTime} , #{prodSpaceInfo} ,
		#{prodGoodsInfo} , #{prodCautionInfo} , #{prodMaximumPeople}
		,
		#{prodAddress}
		, #{prodDetailedAddress} , #{prodPrice} , #{filePath} ,
		#{prodMajorCategoryId}, #{prodSubcategoryId} , #{prodFullAddress} ,
		#{prodLocationX} , #{prodLocationY} , #{additionExplanation} );

		INSERT
		INTO product_views (prod_no, prod_views)
		VALUES (LAST_INSERT_ID(), 0);
	</insert>

	<update id="updateProduct">
		update product
		set
		prod_writer_no = #{product.prodWriterNo},
		prod_title =
		#{product.prodTitle},
		prod_start_time = #{product.prodStartTime},
		prod_end_time =
		#{product.prodEndTime},
		prod_space_info =
		#{product.prodSpaceInfo},
		prod_goods_info =
		#{product.prodGoodsInfo},
		prod_caution_info = #{product.prodCautionInfo},
		prod_maximum_people =
		#{product.prodMaximumPeople},
		prod_address =
		#{product.prodAddress},
		prod_detailed_address = #{product.prodDetailedAddress},
		prod_price =
		#{product.prodPrice},
		prod_major_category_id =
		#{product.prodMajorCategoryId},
		prod_subcategory_id =
		#{product.prodSubcategoryId},
		prod_full_address =
		#{product.prodFullAddress},
		prod_location_x = #{product.prodLocationX},
		prod_location_y = #{product.prodLocationY},
		addition_explanation =
		#{product.additionExplanation} ,
		prod_update_at = NOW()
		<if test="changeImage == 'Y'.toString()">
			,
			file_path = #{product.filePath}
		</if>
		where
		prod_no = #{product.prodNo}
	</update>

	<update id="deleteProduct">
		update product
		set
		prod_update_at = now(),
		prod_delete_yn = 'Y',
		prod_delete_at = now(),
		prod_delete_reason =
		#{prodDeleteReason}
		where
		prod_no = #{prodNo}
	</update>

	<select id="findAllByUserId"
		resultType="com.project3.placestation.repository.entity.Product">
		select * from product
		where prod_delete_yn = 'N'
		and
		prod_writer_no = #{userId}
	</select>

	<select id="findProductAllByUserId"
		resultType="com.project3.placestation.repository.entity.Product">
		select * from product
		where
		prod_writer_no = #{userId}
	</select>

	<select id="findById"
		resultType="com.project3.placestation.repository.entity.Product">
		select
		prod_no as prodNo,
		prod_writer_no as prodWriterNo ,
		prod_title as prodTitle ,
		prod_start_time as prodStartTime,
		prod_end_time as prodEndTime ,
		prod_space_info as prodSpaceInfo ,
		prod_goods_info as prodGoodsInfo ,
		prod_caution_info as prodCautionInfo
		,
		prod_maximum_people as
		prodMaximumPeople ,
		prod_address as prodAddress
		,
		prod_detailed_address
		as prodDetailedAddress ,
		prod_price as prodPrice
		,
		file_path as filePath
		,
		prod_major_category_id as prodMajorCategoryId ,
		prod_subcategory_id as
		prodSubcategoryId ,
		prod_full_address as
		prodFullAddress ,
		prod_location_x as prodLocationX ,
		prod_location_y as
		prodLocationY,
		prod_rdate as prodRdate ,
		prod_update_at as prodUpdateAt
		,
		prod_delete_reason as prodDeleteReason ,
		prod_delete_yn as
		prodDeleteYn ,
		addition_explanation as additionExplanation
		from product
		where prod_no = #{prod_no}
		and
		prod_delete_yn = 'N'
	</select>

	<select id="findMainAllBysearchAndPriceAndstar"
		resultType="com.project3.placestation.product.dto.ProdFilterDto">
		select p.prod_no as prodNo
		, p.prod_writer_no as
		prodWriterNo ,
		p.prod_title
		as prodTitle ,
		p.prod_start_time as
		prodStartTime ,
		p.prod_end_time as prodEndTime,
		p.prod_space_info as prodSpaceInfo ,
		p.prod_maximum_people as
		prodMaximumPeople,
		p.prod_full_address as
		prodFullAddress,
		p.prod_price
		as prodPrice,
		p.file_path as
		filePath,
		p.prod_major_category_id as
		prodMajorCategoryId ,
		p.prod_subcategory_id
		as prodSubcategoryId,
		p.prod_location_x as
		prodLocationX ,
		p.prod_location_y
		as prodLocationY,
		p.prod_rdate as prodRdate,
		avg(r.prod_rev_star) as
		star ,
		mc.category_name as mainCategoryName
		from
		product p
		left join
		prod_review r
		on p.prod_no = r.prod_no
		left join
		prod_major_category mc
		on mc.category_id = p.prod_major_category_id
		where
		p.prod_title like
		CONCAT('%', #{search}, '%')
		and
		p.prod_full_address like CONCAT('%', #{address}, '%')
		and p.prod_price
		between #{min} and
		#{max}
		<if test="majorCategory != 0">
			and
			p.prod_major_category_id = #{majorCategory}
		</if>
		<if test="subcategory != 0">
			and
			p.prod_subcategory_id = #{subcategory}
		</if>
		and
		p.prod_delete_yn = 'N'
		group by p.prod_no
		<if test="star != 0">
			having
			star >= #{star}
		</if>
		order by p.prod_rdate desc
		LIMIT
		#{pageReq.page} *
		#{pageReq.size},#{pageReq.size}
	</select>

	<select id="countFindMainAllBysearchAndPriceAndstar"
		resultType="int">
		SELECT COUNT(*) AS product_count
		FROM (
		SELECT p.prod_no
		FROM product p
		LEFT JOIN prod_review r ON p.prod_no = r.prod_no
		LEFT JOIN
		prod_major_category mc ON mc.category_id =
		p.prod_major_category_id
		WHERE p.prod_title LIKE CONCAT('%', #{search}, '%')
		and
		p.prod_full_address like CONCAT('%', #{address}, '%')
		AND p.prod_price
		BETWEEN #{min} AND #{max}
		<if test="majorCategory != 0">
			AND p.prod_major_category_id = #{majorCategory}
		</if>
		<if test="subcategory != 0">
			AND p.prod_subcategory_id = #{subcategory}
		</if>
		AND p.prod_delete_yn = 'N'
		GROUP BY p.prod_no
		<if test="star != 0">
			HAVING AVG(r.prod_rev_star) >= #{star}
		</if>
		) AS subquery;

	</select>
	<!-- 사업자 닉네임 조회 -->
	<select id="findProdUsername">
		SELECT user_name
		FROM member
		WHERE user_no =
		#{prodWriterNo}
	</select>

	<select id="existById" resultType="int">
		select count(*) from product
		where prod_no = #{prodNo}
		and prod_delete_yn = 'N'
	</select>

</mapper>